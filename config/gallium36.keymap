#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&soft_off {
    hold-time-ms = <5000>;
};

#define TAPPING_TERM 280
#define QUICK_TAP_MS 175
#define PRIOR_IDLE 150
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 // left hand
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 // right hand
#define KEYS_THUMB 30 31 32 33 34 35

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP_MS>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        lhm: homerow_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <PRIOR_IDLE>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R KEYS_THUMB>;
            hold-trigger-on-release;
        };
        rhm: homerow_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <PRIOR_IDLE>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L KEYS_THUMB>;
            hold-trigger-on-release;
        };
        mo_kp: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp P>, <&bt BT_SEL 0>, <&bt BT_SEL 1>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&to 0>, <&to 1>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F10>, <&to 0>, <&to 1>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own
        default_layer { // gallium homerow
            bindings = <
                &kp B &kp L       &kp D       &kp C        &kp V        &kp J        &kp F        &kp O        &kp U       &td1
                &kp N &lhm LALT R &lhm LCTRL T &lhm LSHFT S &kp G        &kp Y        &rhm RSHFT H &rhm RCTRL A &rhm LALT E &kp I
                &kp X &kp Q       &kp M       &kp W        &kp Z        &kp K        &kp P        &kp SQT      &kp SEMI    &kp DOT
                                  &kp ESC     &mo_kp 2 TAB &kp SPACE    &kp SPACE    &mo_kp 1 RET &kp BSPC
            >;
        };
        function_layer {
            bindings = <
                &kp F1   &kp F2   &kp F3    &kp F4       &kp F5    &kp F6    &kp F7           &kp F8           &kp F9        &td2
                &kp LEFT &kp UP   &kp T     &kp S        &kp G     &kp HOME  &rhm RSHFT PG_DN &rhm RCTRL PG_UP &rhm LALT END &kp PSCRN
                &kp X    &kp DOWN &kp RIGHT &kp W        &kp Z     &kp K     &td0             &kp SQT          &kp F11       &kp F12
                                  &kp ESC  &mo_kp 2 TAB &kp SPACE &kp SPACE &kp RET          &kp BSPC
            >;
        };
        number_layer {
            bindings = <
                &kp N1   &kp N2   &kp N3    &kp N4      &kp N5    &kp N6    &kp N7          &kp N8           &kp N9        &kp N0
                &kp LEFT &kp UP   &kp LCTRL &kp LSHIFT  &kp HASH  &kp LBKT  &rhm RSHFT LPAR &rhm RCTRL RPAR &rhm LALT RBKT &kp AT
                &kp EXCL &kp DOWN &kp RIGHT &kp DLLR    &kp PRCNT &kp CARET &kp AMPS        &kp STAR         &kp TILDE     &kp PIPE
                                  &kp LGUI   &kp TAB     &kp SPACE &kp SPACE &kp RET         &kp DEL
            >;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_minus {
            timeout-ms = <60>;
            key-positions = <21 22>;
            bindings = <&kp MINUS>;
        };
        combo_plus {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp EQUAL>;
        };
        combo_backslash {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp BSLH>;
        };
        combo_slash {
            timeout-ms = <60>;
            key-positions = <27 28>;
            bindings = <&kp FSLH>;
        };
        combo_grave {
            timeout-ms = <40>;
            key-positions = <14 24>;
            bindings = <&kp GRAVE>;
        };
        combo_bootloader1 {
            timeout-ms = <100>;
            key-positions = <30 32>;
            bindings = <&bootloader>;
        };
        combo_bootloader2 {
            timeout-ms = <100>;
            key-positions = <33 35>;
            bindings = <&bootloader>;
        };
    };
};
