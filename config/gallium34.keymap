#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NUM 1
#define FUN 2
#define QWERT 3

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        mo_kp: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&soft_off>, <&bt BT_NXT>, <&bt BT_CLR>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F11>, <&kp F12>, <&kp F12>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer { // gallium homerow
            bindings = <
                &kp B &kp L      &kp D       &kp C       &kp V   &kp J     &kp F       &kp O       &kp U      &kp COMMA
                &kp N &hm LALT R &hm LCTRL T &hm LSHFT S &kp G   &kp Y     &hm RSHFT H &hm RCTRL A &hm LALT E &kp I
                &kp X &kp Q      &kp M       &kp W       &kp Z   &kp K     &kp P       &kp SQT     &kp SEMI   &kp DOT
                                             &mo NUM     &mo FUN &kp SPACE &mo QWERT
            >;
        };
        number_layer {
            bindings = <
                &kp N1   &kp N2   &kp N3    &kp N4    &kp N5      &kp N6    &kp N7          &kp N8          &kp N9       &kp N0
                &kp TAB  &kp UP   &kp ESC   &kp SPACE &kp RET     &kp HOME  &hm RSHFT PG_DN &hm RCTRL PG_UP &hm LALT END &kp PSCRN
                &kp LEFT &kp DOWN &kp RIGHT &kp BSPC  &kp DEL     &kp EQUAL &kp PLUS        &kp MINUS       &kp UNDER    &kp LGUI
                                            &none     &bootloader &to DEF   &to FUN
            >;
        };
        function_layer {
            bindings = <
                &kp F1   &kp F2        &kp F3          &kp F4          &kp F5    &kp F6    &kp F7         &kp F8         &kp F9      &kp F10
                &kp LPAR &hm LALT RPAR &hm LCTRL GRAVE &hm LSHFT TILDE &kp HASH  &kp FSLH  &hm RSHFT PIPE &hm RCTRL BSLH &hm LALT AT &kp QMARK
                &kp LBKT &kp RBKT      &kp EXCL        &kp DLLR        &kp PRCNT &kp CARET &kp AMPS       &kp STAR       &kp F11     &kp F12
                                                       &trans          &none     &to DEF   &to QWERT
            >;
        };
        normal_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R   &kp T   &kp H &kp J &kp K    &kp L    &kp FSLH
                &kp A &kp S &kp D &kp F   &kp G   &kp U &kp I &kp O    &kp UP   &td0
                &kp Z &kp X &kp C &kp V   &kp B   &kp N &kp M &kp LEFT &kp DOWN &kp RIGHT
                                  &to NUM &to DEF &bootloader &none
            >;
        };
    };
};
